platform :ios, '13.0'

ENV['COCOAPODS_DISABLE_STATS'] = 'true'

use_frameworks! :linkage => :static
use_modular_headers!

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  raise "#{generated_xcode_build_settings_path} must exist. Run 'flutter pub get' first." unless File.exist?(generated_xcode_build_settings_path)

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in Generated.xcconfig"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup


target 'Runner' do
  pod 'Flutter', :path => 'Flutter'
  flutter_install_all_ios_pods(File.dirname(File.realpath(__FILE__)))

  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)

    target.build_configurations.each do |config|
      # Remove invalid -G flags if they appear
      %w[OTHER_CFLAGS OTHER_CPLUSPLUSFLAGS].each do |flag|
        if config.build_settings[flag].is_a?(Array)
          config.build_settings[flag] = config.build_settings[flag].reject { |f| f == '-G' }
        elsif config.build_settings[flag].is_a?(String)
          config.build_settings[flag] = config.build_settings[flag].gsub(/\-G\b/, '')
        end
      end

      # Ensure Flutter headers are found
      config.build_settings['HEADER_SEARCH_PATHS'] ||= '$(inherited)'
      config.build_settings['HEADER_SEARCH_PATHS'] << ' "$(PODS_ROOT)/Flutter/Flutter.framework/Headers"'

      # Exclude x86_64 for iOS simulator (fixes -G errors on M1/M2 Macs)
      if config.name == 'Debug' || config.name == 'Profile' || config.name == 'Release'
        config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'x86_64'
      end
    end
  end
end

